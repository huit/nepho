{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "AWS CloudFormation Sample Template vpc_multiple_subnets.template: Sample template showing how to create a VPC with multiple subnets. The first subnet is public and contains the load balancer, the second subnet is private and contains an EC2 instance behind the load balancer. **WARNING** This template creates an Amazon EC2 instance. You will be billed for the AWS resources used if you create a stack from this template.",

  "Parameters" : { {% include 'Parameters/General-Instance-Parameters.json' %} },

  "Mappings" : {  {% include 'Mappings/AWS-Instance-Mappings.json' %}  },

  "Resources" : {

{# **** Define VPC network structures **** #}

    {% include 'Resources/VPC.json' %},
   
    {% include 'Resources/VPC-General-Public-Tier.json' %},  
    {% include 'Resources/VPC-General-Private-Tier.json' %},
    {% include 'Resources/VPC-General-Data-Tier.json' %},   
        
    {% include 'Resources/VPC-Public-Web-Access-Rules.json' %},  
    {% include 'Resources/VPC-Private-Tier-Access-Rules.json' %},
    {% include 'Resources/VPC-Data-Tier-Access-Rules.json' %},
    
{# **** ELB and AutoScaling **** #}

    {% include 'Resources/Web-Load-Balancer-and-AutoScaler.json' %},

{# **** Bastion Host **** #}

    {% include 'Resources/BastionHost.json' %}, 

{# **** Application instances **** #}

    "LaunchConfig" : {
      "Type" : "AWS::AutoScaling::LaunchConfiguration",
      "Properties" : {
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },
                                          { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" },
                                          "Arch" ] } ] },
        "UserData" : { "Fn::Base64" : "80" },
        "SecurityGroups" : [ { "Ref" : "InstanceSecurityGroup" } ],
        "InstanceType" : { "Ref" : "InstanceType" }
      }
    },

    "InstanceSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable HTTP access on the configured port",
        "VpcId" : { "Ref" : "VPC" },
        "SecurityGroupIngress" : [ { "IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "SourceSecurityGroupId" : { "Ref" : "LoadBalancerSecurityGroup" } } ]
      }
    }
    
  },

  "Outputs" : {
  
    {% include 'Outputs/BastionHost.json' %},
         
    "URL" : {
      "Description" : "URL of the website",
      "Value" :  { "Fn::Join" : [ "", [ "http://", { "Fn::GetAtt" : [ "ElasticLoadBalancer", "DNSName" ]}]]}
    }
  }
}
